{"version":3,"file":"referenda-sdk.mjs","sources":["../../../src/referenda/referenda-sdk.ts"],"sourcesContent":["import { partitionEntries } from \"@/util/watchEntries\"\nimport { blake2b } from \"@noble/hashes/blake2b\"\nimport { combineKeys, toKeySet } from \"@react-rxjs/utils\"\nimport { Binary, TxEvent } from \"polkadot-api\"\nimport { map } from \"rxjs\"\nimport { getPreimageResolver } from \"../preimages\"\nimport { originToTrack, polkadotSpenderOrigin } from \"./chainConfig\"\nimport {\n  PolkadotRuntimeOriginCaller,\n  ReferendaSdkTypedApi,\n  ReferendumInfo,\n} from \"./descriptors\"\nimport {\n  OngoingReferendum,\n  ReferendaSdk,\n  ReferendaSdkConfig,\n  Referendum,\n} from \"./sdk-types\"\nimport { BIG_BILLION, trackFetcher } from \"./track\"\n\nconst MAX_INLINE_SIZE = 128\ntype RawOngoingReferendum = (ReferendumInfo & { type: \"Ongoing\" })[\"value\"]\n\nconst defaultConfig: ReferendaSdkConfig = {\n  spenderOrigin: polkadotSpenderOrigin,\n}\nexport function createReferendaSdk(\n  typedApi: ReferendaSdkTypedApi,\n  config?: Partial<ReferendaSdkConfig>,\n): ReferendaSdk {\n  const { spenderOrigin } = { ...defaultConfig, ...config }\n  const resolvePreimage = getPreimageResolver(\n    typedApi.query.Preimage.PreimageFor.getValues,\n  )\n  const getTrack = trackFetcher(typedApi)\n\n  function enhanceOngoingReferendum(\n    id: number,\n    referendum: RawOngoingReferendum,\n  ): OngoingReferendum {\n    const resolveProposal = () => resolvePreimage(referendum.proposal)\n\n    async function getConfirmationStart() {\n      const totalVotes = referendum.tally.ayes + referendum.tally.nays\n      if (totalVotes == 0n || !referendum.deciding) {\n        return null\n      }\n      if (referendum.deciding.confirming) {\n        return referendum.deciding.confirming\n      }\n\n      const [track, totalIssuance, inactiveIssuance] = await Promise.all([\n        getTrack(referendum.track),\n        typedApi.query.Balances.TotalIssuance.getValue(),\n        typedApi.query.Balances.InactiveIssuance.getValue(),\n      ])\n      if (!track) return null\n\n      const approvals = (BIG_BILLION * referendum.tally.ayes) / totalVotes\n      const support =\n        (BIG_BILLION * referendum.tally.support) /\n        (totalIssuance - inactiveIssuance)\n\n      const approvalBlock = track.minApproval.getBlock(approvals)\n      const supportBlock = track.minSupport.getBlock(support)\n      const block = Math.max(approvalBlock, supportBlock)\n      if (block === Number.POSITIVE_INFINITY) return null\n\n      return referendum.deciding.since + block\n    }\n    async function getConfirmationEnd() {\n      if (!referendum.deciding) return null\n\n      const track = await getTrack(referendum.track)\n      if (!track) return null\n\n      const confirmationStart =\n        referendum.deciding.confirming ?? (await getConfirmationStart())\n      if (!confirmationStart) return null\n\n      return confirmationStart + track.confirm_period\n    }\n\n    return {\n      ...referendum,\n      type: \"Ongoing\",\n      id,\n      proposal: {\n        rawValue: referendum.proposal,\n        resolve: resolveProposal,\n        decodedCall: async () => {\n          const proposal = await resolveProposal()\n          const token = await typedApi.compatibilityToken\n\n          return typedApi.txFromCallData(proposal, token).decodedCall\n        },\n      },\n      async getDetails(subscanApiKey: string) {\n        const result = await fetch(\n          \"https://polkadot.api.subscan.io/api/scan/referenda/referendum\",\n          {\n            method: \"POST\",\n            body: JSON.stringify({\n              referendum_index: id,\n            }),\n            headers: {\n              \"x-api-key\": subscanApiKey,\n            },\n          },\n        ).then((r) => r.json())\n        // status = \"Confirm\" => Confirming\n\n        return {\n          title: result.data.title,\n        }\n      },\n      getConfirmationStart,\n      getConfirmationEnd,\n      async getTrack() {\n        const track = await getTrack(referendum.track)\n        if (!track) {\n          // Should never happen\n          throw new Error(\"Track not found\")\n        }\n        return track\n      },\n      outcome: null,\n      async getExpectedOutcome() {\n        const confirmationEnd = await getConfirmationEnd()\n        return confirmationEnd\n          ? {\n              side:\n                referendum.tally.ayes > referendum.tally.nays ? \"aye\" : \"nay\",\n              ended: confirmationEnd,\n            }\n          : null\n      },\n    }\n  }\n  function enhanceReferendumInfo(id: number, info: ReferendumInfo): Referendum {\n    if (info.type === \"Ongoing\") return enhanceOngoingReferendum(id, info.value)\n    if (info.type === \"Killed\")\n      return {\n        type: \"Killed\",\n        block: info.value,\n        submission_deposit: undefined,\n        decision_deposit: undefined,\n        outcome: null,\n      }\n\n    const [block, submission_deposit, decision_deposit] = info.value\n    return {\n      type: info.type,\n      block,\n      submission_deposit,\n      decision_deposit,\n      outcome:\n        info.type === \"Approved\"\n          ? { side: \"aye\", ended: block }\n          : info.type === \"Rejected\"\n            ? {\n                side: \"nay\",\n                ended: block,\n              }\n            : null,\n    }\n  }\n\n  async function getReferenda() {\n    const entries =\n      await typedApi.query.Referenda.ReferendumInfoFor.getEntries()\n\n    return entries.map(({ keyArgs: [id], value: info }) =>\n      enhanceReferendumInfo(id, info),\n    )\n  }\n  async function getReferendum(id: number) {\n    const referendum =\n      await typedApi.query.Referenda.ReferendumInfoFor.getValue(id)\n    return referendum ? enhanceReferendumInfo(id, referendum) : null\n  }\n\n  const [rawReferendumById$, referendaKeyChange$] = partitionEntries(\n    typedApi.query.Referenda.ReferendumInfoFor.watchEntries(),\n  )\n\n  const getReferendumById$ = (id: number) =>\n    rawReferendumById$(id).pipe(\n      map((entry) => enhanceReferendumInfo(id, entry)),\n    )\n  const referenda$ = combineKeys(referendaKeyChange$, getReferendumById$)\n  const referendaIds$ = referendaKeyChange$.pipe(\n    toKeySet(),\n    map((set) => [...set]),\n  )\n\n  const getSpenderTrack: ReferendaSdk[\"getSpenderTrack\"] = (value) => {\n    const spenderOriginType = spenderOrigin(value)\n    const origin: PolkadotRuntimeOriginCaller = spenderOriginType\n      ? {\n          type: \"Origins\",\n          value: {\n            type: spenderOriginType,\n            value: undefined,\n          },\n        }\n      : {\n          type: \"system\",\n          value: { type: \"Root\", value: undefined },\n        }\n\n    return {\n      origin,\n      track: getTrack(\n        spenderOriginType ? originToTrack[spenderOriginType] : \"root\",\n      ).then((r) => {\n        if (!r) {\n          throw new Error(`Track ${spenderOriginType ?? \"root\"} not found`)\n        }\n        return r\n      }),\n    }\n  }\n\n  const createReferenda: ReferendaSdk[\"createReferenda\"] = (\n    origin,\n    proposal,\n    options,\n  ) => {\n    // The pallet already calculates uses the earliest_allowed in case it's too small\n    const enactment_moment = options?.enactment ?? {\n      type: \"After\",\n      value: 0,\n    }\n\n    if (proposal.asBytes().length <= MAX_INLINE_SIZE) {\n      return typedApi.tx.Referenda.submit({\n        enactment_moment,\n        proposal: {\n          type: \"Inline\",\n          value: proposal,\n        },\n        proposal_origin: origin,\n      })\n    }\n\n    const hash = blake2b(proposal.asBytes())\n\n    return typedApi.tx.Utility.batch_all({\n      calls: [\n        // Expose the deposit required for the preimage\n        // maybe as part of fee + deposit\n        typedApi.tx.Preimage.note_preimage({\n          bytes: proposal,\n        }).decodedCall,\n        typedApi.tx.Referenda.submit({\n          enactment_moment,\n          proposal: {\n            type: \"Lookup\",\n            value: {\n              hash: Binary.fromBytes(hash),\n              len: proposal.asBytes().length,\n            },\n          },\n          proposal_origin: origin,\n        }).decodedCall,\n      ],\n    })\n  }\n\n  const createSpenderReferenda: ReferendaSdk[\"createSpenderReferenda\"] = (\n    callData,\n    value,\n  ) => {\n    const spenderTrack = getSpenderTrack(value)\n\n    return createReferenda(spenderTrack.origin, callData)\n  }\n\n  const getSubmittedReferendum = (txEvent: TxEvent) =>\n    \"events\" in txEvent\n      ? (typedApi.event.Referenda.Submitted.filter(txEvent.events)[0] ?? null)\n      : null\n\n  return {\n    watch: {\n      referenda$,\n      getReferendumById$,\n      referendaIds$,\n    },\n    getReferenda,\n    getReferendum,\n    getSpenderTrack,\n    getTrack,\n    createReferenda,\n    createSpenderReferenda,\n    getSubmittedReferendum,\n  }\n}\n"],"names":[],"mappings":"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"}