{"version":3,"file":"bounties-sdk.mjs","sources":["../../../src/bounties/bounties-sdk.ts"],"sourcesContent":["import { partitionEntries } from \"@/util/watchEntries\"\nimport { combineKeys, toKeySet } from \"@react-rxjs/utils\"\nimport { Binary, TxEvent } from \"polkadot-api\"\nimport { combineLatest, distinctUntilChanged, map } from \"rxjs\"\nimport { getBountyAccount } from \"./bounty-account\"\nimport { getBountyDescriptions$ } from \"./bounty-descriptions\"\nimport { BountiesSdkTypedApi, BountyWithoutDescription } from \"./descriptors\"\nimport {\n  findApprovingReferenda,\n  findProposingCuratorReferenda,\n} from \"./find-referenda\"\nimport { scheduledFinder } from \"./find-scheduled\"\nimport { BountiesSdk, Bounty, GenericBounty, ProposedBounty } from \"./sdk-types\"\n\nexport function createBountiesSdk(typedApi: BountiesSdkTypedApi): BountiesSdk {\n  const { findScheduledApproved, findScheduledCuratorProposed } =\n    scheduledFinder(typedApi)\n\n  const enhanceBounty = (\n    bounty: BountyWithoutDescription,\n    description: string | null,\n    id: number,\n  ): Bounty => {\n    const generic: GenericBounty = {\n      ...bounty,\n      type: bounty.status.type,\n      id,\n      description,\n      account: getBountyAccount(id),\n    }\n\n    switch (generic.status.type) {\n      case \"Proposed\":\n        return {\n          ...generic,\n          type: \"Proposed\",\n          approve() {\n            return typedApi.tx.Bounties.approve_bounty({ bounty_id: id })\n          },\n          close() {\n            return typedApi.tx.Bounties.close_bounty({ bounty_id: id })\n          },\n          filterApprovingReferenda(referenda) {\n            return findApprovingReferenda(referenda, id)\n          },\n          getScheduledApprovals() {\n            return findScheduledApproved(id)\n          },\n        }\n      case \"Approved\":\n        return { ...generic, type: \"Approved\" }\n      case \"Funded\":\n        return {\n          ...generic,\n          type: \"Funded\",\n          proposeCurator(curator, fee) {\n            return typedApi.tx.Bounties.propose_curator({\n              bounty_id: id,\n              curator: {\n                type: \"Id\",\n                value: curator,\n              },\n              fee,\n            })\n          },\n          close() {\n            return typedApi.tx.Bounties.close_bounty({ bounty_id: id })\n          },\n          filterProposingReferenda(referenda) {\n            return findProposingCuratorReferenda(referenda, id)\n          },\n          getScheduledProposals() {\n            return findScheduledCuratorProposed(id)\n          },\n        }\n      case \"CuratorProposed\":\n        return {\n          ...generic,\n          ...generic.status.value,\n          type: \"CuratorProposed\",\n          acceptCuratorRole() {\n            return typedApi.tx.Bounties.accept_curator({ bounty_id: id })\n          },\n          unassignCurator() {\n            return typedApi.tx.Bounties.unassign_curator({ bounty_id: id })\n          },\n          close() {\n            return typedApi.tx.Bounties.close_bounty({ bounty_id: id })\n          },\n        }\n      case \"Active\":\n        return {\n          ...generic,\n          type: \"Active\",\n          curator: generic.status.value.curator,\n          updateDue: generic.status.value.update_due,\n          extendExpiry(remark) {\n            return typedApi.tx.Bounties.extend_bounty_expiry({\n              bounty_id: id,\n              remark: Binary.fromText(remark ?? \"\"),\n            })\n          },\n          award(beneficiary) {\n            return typedApi.tx.Bounties.award_bounty({\n              bounty_id: id,\n              beneficiary: {\n                type: \"Id\",\n                value: beneficiary,\n              },\n            })\n          },\n          unassignCurator() {\n            return typedApi.tx.Bounties.unassign_curator({ bounty_id: id })\n          },\n          close() {\n            return typedApi.tx.Bounties.close_bounty({ bounty_id: id })\n          },\n        }\n      case \"PendingPayout\":\n        return {\n          ...generic,\n          type: \"PendingPayout\",\n          curator: generic.status.value.curator,\n          unlockAt: generic.status.value.unlock_at,\n          beneficiary: generic.status.value.beneficiary,\n          claim() {\n            return typedApi.tx.Bounties.claim_bounty({ bounty_id: id })\n          },\n          unassignCurator() {\n            return typedApi.tx.Bounties.unassign_curator({ bounty_id: id })\n          },\n        }\n    }\n    throw new Error(\"Unreachable\")\n  }\n\n  function watchBounties() {\n    const [getBountyById$, bountyKeyChanges$] = partitionEntries(\n      typedApi.query.Bounties.Bounties.watchEntries(),\n    )\n    const descriptions$ = getBountyDescriptions$(\n      typedApi.query.Bounties.BountyDescriptions.getEntries,\n      typedApi.query.Bounties.BountyDescriptions.getValues,\n      bountyKeyChanges$,\n    )\n\n    const bountyIds$ = bountyKeyChanges$.pipe(\n      toKeySet(),\n      map((set) => [...set]),\n    )\n\n    const getEnhancedBountyById$ = (id: number) =>\n      combineLatest([\n        getBountyById$(id),\n        descriptions$.pipe(\n          map((r): string | null => r[id] ?? null),\n          distinctUntilChanged(),\n        ),\n      ]).pipe(\n        map(([bounty, description]) => enhanceBounty(bounty, description, id)),\n      )\n\n    return {\n      bounties$: combineKeys(bountyKeyChanges$, getEnhancedBountyById$),\n      getBountyById$: getEnhancedBountyById$,\n      bountyIds$,\n    }\n  }\n\n  function getBounty(id: number, at?: string) {\n    return Promise.all([\n      typedApi.query.Bounties.Bounties.getValue(id, { at }),\n      typedApi.query.Bounties.BountyDescriptions.getValue(id, { at }),\n    ]).then(([bounty, description]) =>\n      bounty\n        ? enhanceBounty(bounty, description ? description.asText() : null, id)\n        : null,\n    )\n  }\n\n  async function getProposedBounty(\n    txEvent: TxEvent,\n  ): Promise<ProposedBounty | null> {\n    if (!(\"events\" in txEvent)) {\n      return null\n    }\n    const proposedBountyEvt = typedApi.event.Bounties.BountyProposed.filter(\n      txEvent.events,\n    )[0]\n    if (!proposedBountyEvt) {\n      return null\n    }\n    const id = proposedBountyEvt.index\n    const at = txEvent.type === \"finalized\" ? undefined : txEvent.block.hash\n\n    const bounty = await getBounty(id, at)\n    if (!bounty) return null\n\n    return bounty.type === \"Proposed\" ? bounty : null\n  }\n\n  function getBounties() {\n    return Promise.all([\n      typedApi.query.Bounties.Bounties.getEntries(),\n      typedApi.query.Bounties.BountyDescriptions.getEntries(),\n    ]).then(([entries, descriptions]) => {\n      const descriptionMap = Object.fromEntries(\n        descriptions.map(({ keyArgs, value }) => [keyArgs[0], value.asText()]),\n      )\n\n      return entries\n        .map(({ keyArgs: [id], value }) => ({ bounty: value, id }))\n        .sort((a, b) => a.id - b.id)\n        .map(({ bounty, id }) =>\n          enhanceBounty(bounty, descriptionMap[id] ?? null, id),\n        )\n    })\n  }\n\n  return {\n    watch: watchBounties(),\n    getBounties,\n    getBounty,\n    getProposedBounty,\n  }\n}\n"],"names":[],"mappings":"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"}