{"version":3,"file":"watchEntries.mjs","sources":["../../../src/util/watchEntries.ts"],"sourcesContent":["import { partitionByKey } from \"@react-rxjs/utils\"\nimport { map, mergeMap, Observable, takeWhile } from \"rxjs\"\n\nexport type Deltas<T> = {\n  deleted: {\n    args: Array<number>\n    value: T\n  }[]\n  upserted: {\n    args: Array<number>\n    value: T\n  }[]\n}\nexport function partitionEntries<T>(\n  entries$: Observable<{\n    deltas: Deltas<T> | null\n  }>,\n) {\n  return partitionByKey(\n    entries$.pipe(\n      mergeMap((v) =>\n        v.deltas\n          ? [\n              ...v.deltas.deleted.map((d) => ({\n                id: d.args.at(-1)!,\n                value: undefined,\n              })),\n              ...v.deltas.upserted.map((d) => ({\n                id: d.args.at(-1)!,\n                value: d.value,\n              })),\n            ].sort((a, b) => a.id - b.id)\n          : [],\n      ),\n    ),\n    (res) => res.id,\n    (group$) =>\n      group$.pipe(\n        takeWhile(({ value }) => Boolean(value), false),\n        map(({ value }) => value!),\n      ),\n  )\n}\n"],"names":[],"mappings":";;;AAaO,SAAS,iBACd,QAGA,EAAA;AACA,EAAO,OAAA,cAAA;AAAA,IACL,QAAS,CAAA,IAAA;AAAA,MACP,QAAA;AAAA,QAAS,CAAC,CACR,KAAA,CAAA,CAAE,MACE,GAAA;AAAA,UACE,GAAG,CAAE,CAAA,MAAA,CAAO,OAAQ,CAAA,GAAA,CAAI,CAAC,CAAO,MAAA;AAAA,YAC9B,EAAI,EAAA,CAAA,CAAE,IAAK,CAAA,EAAA,CAAG,EAAE,CAAA;AAAA,YAChB,KAAO,EAAA;AAAA,WACP,CAAA,CAAA;AAAA,UACF,GAAG,CAAE,CAAA,MAAA,CAAO,QAAS,CAAA,GAAA,CAAI,CAAC,CAAO,MAAA;AAAA,YAC/B,EAAI,EAAA,CAAA,CAAE,IAAK,CAAA,EAAA,CAAG,EAAE,CAAA;AAAA,YAChB,OAAO,CAAE,CAAA;AAAA,WACT,CAAA;AAAA,SACJ,CAAE,IAAK,CAAA,CAAC,CAAG,EAAA,CAAA,KAAM,EAAE,EAAK,GAAA,CAAA,CAAE,EAAE,CAAA,GAC5B;AAAC;AACP,KACF;AAAA,IACA,CAAC,QAAQ,GAAI,CAAA,EAAA;AAAA,IACb,CAAC,WACC,MAAO,CAAA,IAAA;AAAA,MACL,SAAA,CAAU,CAAC,EAAE,KAAA,OAAY,OAAQ,CAAA,KAAK,GAAG,KAAK,CAAA;AAAA,MAC9C,GAAI,CAAA,CAAC,EAAE,KAAA,OAAY,KAAM;AAAA;AAC3B,GACJ;AACF;;;;"}