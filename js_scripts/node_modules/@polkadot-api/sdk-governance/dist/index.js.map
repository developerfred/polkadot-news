{"version":3,"file":"index.js","sources":["../src/util/watchEntries.ts","../src/preimages.ts","../src/referenda/chainConfig.ts","../src/util/keyBy.ts","../src/referenda/track.ts","../src/referenda/referenda-sdk.ts","../src/bounties/bounty-account.ts","../src/bounties/bounty-descriptions.ts","../src/util/memo.ts","../src/bounties/find-referenda.ts","../src/bounties/find-scheduled.ts","../src/bounties/bounties-sdk.ts","../src/bounties/child-bounties-sdk.ts","../src/voting/voting-sdk.ts"],"sourcesContent":["import { partitionByKey } from \"@react-rxjs/utils\"\nimport { map, mergeMap, Observable, takeWhile } from \"rxjs\"\n\nexport type Deltas<T> = {\n  deleted: {\n    args: Array<number>\n    value: T\n  }[]\n  upserted: {\n    args: Array<number>\n    value: T\n  }[]\n}\nexport function partitionEntries<T>(\n  entries$: Observable<{\n    deltas: Deltas<T> | null\n  }>,\n) {\n  return partitionByKey(\n    entries$.pipe(\n      mergeMap((v) =>\n        v.deltas\n          ? [\n              ...v.deltas.deleted.map((d) => ({\n                id: d.args.at(-1)!,\n                value: undefined,\n              })),\n              ...v.deltas.upserted.map((d) => ({\n                id: d.args.at(-1)!,\n                value: d.value,\n              })),\n            ].sort((a, b) => a.id - b.id)\n          : [],\n      ),\n    ),\n    (res) => res.id,\n    (group$) =>\n      group$.pipe(\n        takeWhile(({ value }) => Boolean(value), false),\n        map(({ value }) => value!),\n      ),\n  )\n}\n","import { Binary } from \"polkadot-api\"\nimport { PreimagesBounded } from \"./referenda/descriptors\"\n\nconst preimageCache = new Map<string, Promise<Binary>>()\n\nexport const getPreimageResolver = (\n  getPreimageValues: (\n    keys: [[Binary, number]][],\n  ) => Promise<(Binary | undefined)[]>,\n) => {\n  const batched = batch((preimages: [Binary, number][]) =>\n    getPreimageValues(preimages.map((v) => [v])),\n  )\n\n  return async (proposal: PreimagesBounded) => {\n    if (proposal.type === \"Legacy\")\n      throw new Error(\"Legacy proposals can't be resolved\")\n    if (proposal.type === \"Inline\") return proposal.value\n\n    const cached = preimageCache.get(proposal.value.hash.asHex())\n    if (cached) return cached\n    const promise = (async () => {\n      const result = await batched([proposal.value.hash, proposal.value.len])\n      if (!result)\n        throw new Error(`Preimage ${proposal.value.hash.asHex()} not found`)\n      return result\n    })()\n    preimageCache.set(proposal.value.hash.asHex(), promise)\n    return promise\n  }\n}\n\nconst batch = <T, R>(fn: (values: T[]) => Promise<R[]>) => {\n  let batched: Array<{\n    value: T\n    resolve: (res: R) => void\n    reject: (err: any) => void\n  }> | null = null\n\n  async function execute() {\n    if (!batched) return\n    try {\n      const result = await fn(batched.map((v) => v.value))\n      batched.forEach(({ resolve }, i) => resolve(result[i]))\n    } catch (ex) {\n      console.error(ex)\n      batched.forEach(({ reject }) => reject(ex))\n    }\n    batched = null\n  }\n\n  return (value: T): Promise<R> =>\n    new Promise((resolve, reject) => {\n      if (!batched) {\n        batched = [\n          {\n            value,\n            resolve,\n            reject,\n          },\n        ]\n        setTimeout(execute)\n      } else {\n        batched.push({\n          value,\n          resolve,\n          reject,\n        })\n      }\n    })\n}\n","const SpenderOrigin = {\n  Treasurer: \"Treasurer\",\n  SmallTipper: \"SmallTipper\",\n  BigTipper: \"BigTipper\",\n  SmallSpender: \"SmallSpender\",\n  MediumSpender: \"MediumSpender\",\n  BigSpender: \"BigSpender\",\n} as const\nexport type Origin = (typeof SpenderOrigin)[keyof typeof SpenderOrigin]\n\nexport const originToTrack: Record<Origin, string> = {\n  Treasurer: \"treasurer\",\n  SmallTipper: \"small_tipper\",\n  BigTipper: \"big_tipper\",\n  SmallSpender: \"small_spender\",\n  MediumSpender: \"medium_spender\",\n  BigSpender: \"big_spender\",\n}\n\nconst DOT_UNIT = 10_000_000_000n\nexport const polkadotSpenderOrigin = (value: bigint): Origin | null => {\n  if (value <= 250n * DOT_UNIT) return SpenderOrigin.SmallTipper\n  if (value <= 1_000n * DOT_UNIT) return SpenderOrigin.BigTipper\n  if (value <= 10_000n * DOT_UNIT) return SpenderOrigin.SmallSpender\n  if (value <= 100_000n * DOT_UNIT) return SpenderOrigin.MediumSpender\n  if (value <= 1_000_000n * DOT_UNIT) return SpenderOrigin.BigSpender\n  if (value <= 10_000_000n * DOT_UNIT) return SpenderOrigin.Treasurer\n  return null\n}\n\nconst KSM_UNIT = 1_000_000_000_000n\nexport const kusamaSpenderOrigin = (value: bigint): Origin | null => {\n  if (value <= 1n * KSM_UNIT) return SpenderOrigin.SmallTipper\n  if (value <= 5n * KSM_UNIT) return SpenderOrigin.BigTipper\n  if (value <= 333n * KSM_UNIT) return SpenderOrigin.SmallSpender\n  if (value <= 3_333n * KSM_UNIT) return SpenderOrigin.MediumSpender\n  if (value <= 33_333n * KSM_UNIT) return SpenderOrigin.BigSpender\n  return SpenderOrigin.Treasurer\n}\n","export const keyBy = <T, K extends string | number>(\n  arr: Iterable<T>,\n  mapFn: (v: T) => K,\n): Record<K, T> =>\n  Object.fromEntries(Array.from(arr).map((v) => [mapFn(v), v])) as any\n","import { keyBy } from \"@/util/keyBy\"\nimport {\n  ReferendaSdkTypedApi,\n  ReferendaTrackData as ReferendaTrackDescriptor,\n  ReferendaTypesCurve,\n} from \"./descriptors\"\nimport { ReferendaTrack, TrackFunctionDetails } from \"./sdk-types\"\n\nexport function enhanceTrack(track: ReferendaTrackDescriptor): ReferendaTrack {\n  return {\n    ...track,\n    minApproval: curveToFunctionDetails(\n      track.decision_period,\n      track.min_approval,\n    ),\n    minSupport: curveToFunctionDetails(\n      track.decision_period,\n      track.min_support,\n    ),\n  }\n}\n\nexport function trackFetcher(typedApi: ReferendaSdkTypedApi) {\n  const referendaTracksPromise = typedApi.constants.Referenda.Tracks().then(\n    (tracks) => {\n      const byId = Object.fromEntries(tracks)\n      const byName = keyBy(Object.values(byId), (v) => v.name)\n      return { byId, byName }\n    },\n  )\n  return async (id: number | string) => {\n    const referendaTracks = await referendaTracksPromise\n    const track =\n      typeof id === \"number\"\n        ? referendaTracks.byId[id]\n        : referendaTracks.byName[id]\n    if (!track) return null\n\n    return enhanceTrack(track)\n  }\n}\n\nconst BILLION = 1_000_000_000\nexport const BIG_BILLION = 1_000_000_000n\nconst blockToPerBill = (block: number, period: number) =>\n  (BigInt(block) * BIG_BILLION) / BigInt(period)\nconst perBillToBlock = (perBillion: bigint | null, period: number) =>\n  perBillion == null\n    ? Number.POSITIVE_INFINITY\n    : Number(bigDivCeil(perBillion * BigInt(period), BIG_BILLION))\nconst perBillToPct = (perBillion: bigint) => Number(perBillion) / BILLION\n\nfunction curveToFunctionDetails(\n  period: number,\n  curve: ReferendaTypesCurve,\n): TrackFunctionDetails {\n  const curveFn =\n    curve.type === \"LinearDecreasing\"\n      ? linearDecreasing(curve.value)\n      : curve.type === \"SteppedDecreasing\"\n        ? steppedDecreasing(curve.value)\n        : reciprocal(curve.value)\n\n  return {\n    curve,\n    getThreshold(at) {\n      return curveFn.getValue(blockToPerBill(at, period))\n    },\n    getBlock(pct) {\n      return perBillToBlock(curveFn.getTime(pct), period)\n    },\n    getData(step = 1) {\n      return curveFn\n        .getData(blockToPerBill(Math.max(step, 1), period))\n        .map(({ time, value }) => ({\n          block: perBillToBlock(time, period),\n          threshold: perBillToPct(value),\n        }))\n    },\n  }\n}\n\nconst bigCap = (\n  value: bigint,\n  cap: Partial<{ floor: bigint; ceil: bigint }>,\n) => {\n  if (cap.floor != null) value = value < cap.floor ? cap.floor : value\n  if (cap.ceil != null) value = value < cap.ceil ? cap.ceil : value\n  return value\n}\nconst bigDivCeil = (a: bigint, b: bigint) => {\n  const floor = a / b\n  return a % b === 0n ? floor : floor + 1n\n}\n\nfunction linearDecreasing(params: {\n  length: number\n  floor: number\n  ceil: number\n}) {\n  const { length, floor, ceil } = {\n    length: BigInt(params.length),\n    floor: BigInt(params.floor),\n    ceil: BigInt(params.ceil),\n  }\n\n  // v(x) = ceil + (x * (floor - ceil)) / length\n  const getValue = (at: bigint) =>\n    bigCap(ceil + (at * (floor - ceil)) / length, {\n      floor,\n      ceil,\n    })\n\n  const getTime = (value: bigint) => {\n    if (value > ceil) return 0n\n    if (value < floor) return null\n    return ((value - ceil) * length) / (floor - ceil)\n  }\n  const getData = () => [\n    {\n      time: 0n,\n      value: ceil,\n    },\n    {\n      time: length,\n      value: floor,\n    },\n    ...(BIG_BILLION > length\n      ? [\n          {\n            time: BIG_BILLION,\n            value: floor,\n          },\n        ]\n      : []),\n  ]\n  return { getValue, getTime, getData }\n}\nfunction steppedDecreasing(params: {\n  begin: number\n  end: number\n  step: number\n  period: number\n}) {\n  const { begin, end, step, period } = {\n    begin: BigInt(params.begin),\n    end: BigInt(params.end),\n    step: BigInt(params.step),\n    period: BigInt(params.period),\n  }\n\n  const getValue = (at: bigint) =>\n    bigCap(begin - (at / period) * step, {\n      ceil: begin,\n      floor: end,\n    })\n\n  const getTime = (value: bigint) => {\n    if (value > begin) return 0n\n    if (value < end) return null\n    return ((begin - value) / step) * period\n  }\n  const getData = () => {\n    const result: Array<{\n      time: bigint\n      value: bigint\n    }> = []\n\n    for (let k = 0n, value = begin; value > end; value -= step) {\n      result.push({\n        time: k * period,\n        value,\n      })\n    }\n    if ((begin - end) % step != 0n) {\n      result.push({\n        time: ((begin - end) / step) * period,\n        value: end,\n      })\n    }\n    if (result.at(-1)?.time! < BIG_BILLION) {\n      result.push({\n        time: BIG_BILLION,\n        value: end,\n      })\n    }\n\n    return result\n  }\n  return { getValue, getTime, getData }\n}\nfunction reciprocal({\n  factor,\n  x_offset,\n  y_offset,\n}: {\n  factor: bigint\n  x_offset: bigint\n  y_offset: bigint\n}) {\n  // v(x) = factor/(x+x_offset)-y_offset\n  const getValue = (at: bigint) =>\n    (BIG_BILLION * factor) / (at + x_offset) + y_offset\n  const getTime = (value: bigint) => {\n    // Below horizontal asymptote => will never intersect\n    if (value <= y_offset) return null\n    // Above y-axis cut => 0\n    // It needs to be multiplied by BIG_BILLION when dividing because we're working with perbillion\n    if (x_offset != 0n && value > (BIG_BILLION * factor) / x_offset + y_offset)\n      return 0n\n\n    return (BIG_BILLION * factor) / (value - y_offset) - x_offset\n  }\n  const getData = (step: bigint) => {\n    const result: Array<{\n      time: bigint\n      value: bigint\n    }> = []\n\n    for (let time = 0n; time <= BIG_BILLION; time += step) {\n      result.push({ time, value: getValue(time) })\n    }\n    if (result.at(-1)?.time! < BIG_BILLION) {\n      result.push({\n        time: BIG_BILLION,\n        value: getValue(BIG_BILLION),\n      })\n    }\n\n    return result\n  }\n  return { getValue, getTime, getData }\n}\n","import { partitionEntries } from \"@/util/watchEntries\"\nimport { blake2b } from \"@noble/hashes/blake2b\"\nimport { combineKeys, toKeySet } from \"@react-rxjs/utils\"\nimport { Binary, TxEvent } from \"polkadot-api\"\nimport { map } from \"rxjs\"\nimport { getPreimageResolver } from \"../preimages\"\nimport { originToTrack, polkadotSpenderOrigin } from \"./chainConfig\"\nimport {\n  PolkadotRuntimeOriginCaller,\n  ReferendaSdkTypedApi,\n  ReferendumInfo,\n} from \"./descriptors\"\nimport {\n  OngoingReferendum,\n  ReferendaSdk,\n  ReferendaSdkConfig,\n  Referendum,\n} from \"./sdk-types\"\nimport { BIG_BILLION, trackFetcher } from \"./track\"\n\nconst MAX_INLINE_SIZE = 128\ntype RawOngoingReferendum = (ReferendumInfo & { type: \"Ongoing\" })[\"value\"]\n\nconst defaultConfig: ReferendaSdkConfig = {\n  spenderOrigin: polkadotSpenderOrigin,\n}\nexport function createReferendaSdk(\n  typedApi: ReferendaSdkTypedApi,\n  config?: Partial<ReferendaSdkConfig>,\n): ReferendaSdk {\n  const { spenderOrigin } = { ...defaultConfig, ...config }\n  const resolvePreimage = getPreimageResolver(\n    typedApi.query.Preimage.PreimageFor.getValues,\n  )\n  const getTrack = trackFetcher(typedApi)\n\n  function enhanceOngoingReferendum(\n    id: number,\n    referendum: RawOngoingReferendum,\n  ): OngoingReferendum {\n    const resolveProposal = () => resolvePreimage(referendum.proposal)\n\n    async function getConfirmationStart() {\n      const totalVotes = referendum.tally.ayes + referendum.tally.nays\n      if (totalVotes == 0n || !referendum.deciding) {\n        return null\n      }\n      if (referendum.deciding.confirming) {\n        return referendum.deciding.confirming\n      }\n\n      const [track, totalIssuance, inactiveIssuance] = await Promise.all([\n        getTrack(referendum.track),\n        typedApi.query.Balances.TotalIssuance.getValue(),\n        typedApi.query.Balances.InactiveIssuance.getValue(),\n      ])\n      if (!track) return null\n\n      const approvals = (BIG_BILLION * referendum.tally.ayes) / totalVotes\n      const support =\n        (BIG_BILLION * referendum.tally.support) /\n        (totalIssuance - inactiveIssuance)\n\n      const approvalBlock = track.minApproval.getBlock(approvals)\n      const supportBlock = track.minSupport.getBlock(support)\n      const block = Math.max(approvalBlock, supportBlock)\n      if (block === Number.POSITIVE_INFINITY) return null\n\n      return referendum.deciding.since + block\n    }\n    async function getConfirmationEnd() {\n      if (!referendum.deciding) return null\n\n      const track = await getTrack(referendum.track)\n      if (!track) return null\n\n      const confirmationStart =\n        referendum.deciding.confirming ?? (await getConfirmationStart())\n      if (!confirmationStart) return null\n\n      return confirmationStart + track.confirm_period\n    }\n\n    return {\n      ...referendum,\n      type: \"Ongoing\",\n      id,\n      proposal: {\n        rawValue: referendum.proposal,\n        resolve: resolveProposal,\n        decodedCall: async () => {\n          const proposal = await resolveProposal()\n          const token = await typedApi.compatibilityToken\n\n          return typedApi.txFromCallData(proposal, token).decodedCall\n        },\n      },\n      async getDetails(subscanApiKey: string) {\n        const result = await fetch(\n          \"https://polkadot.api.subscan.io/api/scan/referenda/referendum\",\n          {\n            method: \"POST\",\n            body: JSON.stringify({\n              referendum_index: id,\n            }),\n            headers: {\n              \"x-api-key\": subscanApiKey,\n            },\n          },\n        ).then((r) => r.json())\n        // status = \"Confirm\" => Confirming\n\n        return {\n          title: result.data.title,\n        }\n      },\n      getConfirmationStart,\n      getConfirmationEnd,\n      async getTrack() {\n        const track = await getTrack(referendum.track)\n        if (!track) {\n          // Should never happen\n          throw new Error(\"Track not found\")\n        }\n        return track\n      },\n      outcome: null,\n      async getExpectedOutcome() {\n        const confirmationEnd = await getConfirmationEnd()\n        return confirmationEnd\n          ? {\n              side:\n                referendum.tally.ayes > referendum.tally.nays ? \"aye\" : \"nay\",\n              ended: confirmationEnd,\n            }\n          : null\n      },\n    }\n  }\n  function enhanceReferendumInfo(id: number, info: ReferendumInfo): Referendum {\n    if (info.type === \"Ongoing\") return enhanceOngoingReferendum(id, info.value)\n    if (info.type === \"Killed\")\n      return {\n        type: \"Killed\",\n        block: info.value,\n        submission_deposit: undefined,\n        decision_deposit: undefined,\n        outcome: null,\n      }\n\n    const [block, submission_deposit, decision_deposit] = info.value\n    return {\n      type: info.type,\n      block,\n      submission_deposit,\n      decision_deposit,\n      outcome:\n        info.type === \"Approved\"\n          ? { side: \"aye\", ended: block }\n          : info.type === \"Rejected\"\n            ? {\n                side: \"nay\",\n                ended: block,\n              }\n            : null,\n    }\n  }\n\n  async function getReferenda() {\n    const entries =\n      await typedApi.query.Referenda.ReferendumInfoFor.getEntries()\n\n    return entries.map(({ keyArgs: [id], value: info }) =>\n      enhanceReferendumInfo(id, info),\n    )\n  }\n  async function getReferendum(id: number) {\n    const referendum =\n      await typedApi.query.Referenda.ReferendumInfoFor.getValue(id)\n    return referendum ? enhanceReferendumInfo(id, referendum) : null\n  }\n\n  const [rawReferendumById$, referendaKeyChange$] = partitionEntries(\n    typedApi.query.Referenda.ReferendumInfoFor.watchEntries(),\n  )\n\n  const getReferendumById$ = (id: number) =>\n    rawReferendumById$(id).pipe(\n      map((entry) => enhanceReferendumInfo(id, entry)),\n    )\n  const referenda$ = combineKeys(referendaKeyChange$, getReferendumById$)\n  const referendaIds$ = referendaKeyChange$.pipe(\n    toKeySet(),\n    map((set) => [...set]),\n  )\n\n  const getSpenderTrack: ReferendaSdk[\"getSpenderTrack\"] = (value) => {\n    const spenderOriginType = spenderOrigin(value)\n    const origin: PolkadotRuntimeOriginCaller = spenderOriginType\n      ? {\n          type: \"Origins\",\n          value: {\n            type: spenderOriginType,\n            value: undefined,\n          },\n        }\n      : {\n          type: \"system\",\n          value: { type: \"Root\", value: undefined },\n        }\n\n    return {\n      origin,\n      track: getTrack(\n        spenderOriginType ? originToTrack[spenderOriginType] : \"root\",\n      ).then((r) => {\n        if (!r) {\n          throw new Error(`Track ${spenderOriginType ?? \"root\"} not found`)\n        }\n        return r\n      }),\n    }\n  }\n\n  const createReferenda: ReferendaSdk[\"createReferenda\"] = (\n    origin,\n    proposal,\n    options,\n  ) => {\n    // The pallet already calculates uses the earliest_allowed in case it's too small\n    const enactment_moment = options?.enactment ?? {\n      type: \"After\",\n      value: 0,\n    }\n\n    if (proposal.asBytes().length <= MAX_INLINE_SIZE) {\n      return typedApi.tx.Referenda.submit({\n        enactment_moment,\n        proposal: {\n          type: \"Inline\",\n          value: proposal,\n        },\n        proposal_origin: origin,\n      })\n    }\n\n    const hash = blake2b(proposal.asBytes())\n\n    return typedApi.tx.Utility.batch_all({\n      calls: [\n        // Expose the deposit required for the preimage\n        // maybe as part of fee + deposit\n        typedApi.tx.Preimage.note_preimage({\n          bytes: proposal,\n        }).decodedCall,\n        typedApi.tx.Referenda.submit({\n          enactment_moment,\n          proposal: {\n            type: \"Lookup\",\n            value: {\n              hash: Binary.fromBytes(hash),\n              len: proposal.asBytes().length,\n            },\n          },\n          proposal_origin: origin,\n        }).decodedCall,\n      ],\n    })\n  }\n\n  const createSpenderReferenda: ReferendaSdk[\"createSpenderReferenda\"] = (\n    callData,\n    value,\n  ) => {\n    const spenderTrack = getSpenderTrack(value)\n\n    return createReferenda(spenderTrack.origin, callData)\n  }\n\n  const getSubmittedReferendum = (txEvent: TxEvent) =>\n    \"events\" in txEvent\n      ? (typedApi.event.Referenda.Submitted.filter(txEvent.events)[0] ?? null)\n      : null\n\n  return {\n    watch: {\n      referenda$,\n      getReferendumById$,\n      referendaIds$,\n    },\n    getReferenda,\n    getReferendum,\n    getSpenderTrack,\n    getTrack,\n    createReferenda,\n    createSpenderReferenda,\n    getSubmittedReferendum,\n  }\n}\n","import { AccountId, Binary } from \"polkadot-api\"\nimport { u32 } from \"scale-ts\"\n\nconst ZERO = new Array(32).fill(0)\n\nconst createId = (...parts: Array<Uint8Array>) => {\n  const arr = [...ZERO]\n  let i = 0\n  parts.forEach((p) => p.forEach((v) => (arr[i++] = v)))\n\n  return new Uint8Array(arr)\n}\n\nconst bountyIdPrefix = Binary.fromText(\"modlpy/trsry\\u0008bt\").asBytes()\nexport const getBountyAccount = (id: number) =>\n  AccountId().dec(createId(bountyIdPrefix, u32.enc(id)))\n\nconst childBountyIdPrefix = Binary.fromText(\"modlpy/trsry\\u0008bc\").asBytes()\nexport const getChildBountyAccount = (parentId: number, id: number) =>\n  AccountId().dec(createId(childBountyIdPrefix, u32.enc(parentId), u32.enc(id)))\n","import { KeyChanges } from \"@react-rxjs/utils\"\nimport { Binary } from \"polkadot-api\"\nimport {\n  defer,\n  merge,\n  mergeMap,\n  Observable,\n  scan,\n  shareReplay,\n  skip,\n  startWith,\n} from \"rxjs\"\n\nexport const getBountyDescriptions$ = (\n  getEntries: () => Promise<\n    {\n      keyArgs: [Key: number]\n      value: Binary\n    }[]\n  >,\n  getValues: (keys: [number][]) => Promise<(Binary | undefined)[]>,\n  keyChanges$: Observable<KeyChanges<number>>,\n) =>\n  merge(\n    defer(getEntries),\n    keyChanges$.pipe(\n      skip(1),\n      mergeMap((changes) => {\n        if (changes.type === \"remove\") return []\n        const keys = Array.from(changes.keys)\n        return getValues(keys.map((key) => [key])).then((result) =>\n          result\n            .map((value, i) => ({\n              keyArgs: [keys[i]] as [Key: number],\n              value: value!,\n            }))\n            .filter(({ value }) => value != null),\n        )\n      }),\n    ),\n  ).pipe(\n    scan(\n      (acc, v) => ({\n        ...acc,\n        ...Object.fromEntries(\n          v.map(({ keyArgs, value }) => [keyArgs[0], value.asText()]),\n        ),\n      }),\n      {} as Record<number, string>,\n    ),\n    startWith({} as Record<number, string>),\n    shareReplay({ bufferSize: 1, refCount: true }),\n  )\n","export const keyedMemo =\n  <Arg extends [any], R>(\n    fn: (...arg: Arg) => R,\n    cache: Map<Arg[0], R> | WeakMap<Arg[0], R>,\n  ) =>\n  (...arg: Arg) => {\n    if (cache.has(arg[0])) return cache.get(arg[0])!\n    const result = fn(...arg)\n    cache.set(arg[0], result)\n    return result\n  }\n\nexport const memo = <Arg extends Array<unknown>, R>(fn: (...arg: Arg) => R) => {\n  let cachedKey: Arg | null = null\n  let cachedValue: R = null as any\n  return (...arg: Arg) => {\n    if (cachedKey && cachedKey.every((k, i) => k === arg[i])) {\n      return cachedValue\n    }\n    cachedKey = arg\n    cachedValue = fn(...arg)\n    return cachedValue\n  }\n}\n","import { OngoingReferendum } from \"@/referenda/sdk-types\"\nimport { keyedMemo } from \"@/util/memo\"\nimport { MultiAddress } from \"./descriptors\"\n\nconst spenderOrigins = [\n  \"Treasurer\",\n  \"SmallSpender\",\n  \"MediumSpender\",\n  \"BigSpender\",\n  \"SmallTipper\",\n  \"BigTipper\",\n]\n\nconst getDecodedSpenderReferenda = keyedMemo(\n  async (ongoingReferenda: OngoingReferendum[]) => {\n    const spenderReferenda = ongoingReferenda.filter(\n      (ref) =>\n        (ref.origin.type === \"Origins\" &&\n          spenderOrigins.includes(ref.origin.value.type)) ||\n        (ref.origin.type === \"system\" && ref.origin.value.type === \"Root\"),\n    )\n    const response = await Promise.all(\n      spenderReferenda.map((referendum) =>\n        referendum.proposal\n          .decodedCall()\n          .then((call) => ({\n            referendum,\n            call,\n          }))\n          .catch((ex) => {\n            console.error(ex)\n            return null\n          }),\n      ),\n    )\n    return response.filter((v) => !!v)\n  },\n  new WeakMap(),\n)\n\nexport async function findApprovingReferenda(\n  ongoingReferenda: OngoingReferendum[],\n  bountyId: number,\n) {\n  const spenderReferenda = await getDecodedSpenderReferenda(ongoingReferenda)\n\n  return spenderReferenda\n    .filter(({ call }) =>\n      findCalls(\n        {\n          pallet: \"Bounties\",\n          name: \"approve_bounty\",\n        },\n        call,\n      ).some((v) => v?.bounty_id === bountyId),\n    )\n    .map(({ referendum }) => referendum)\n}\n\nexport async function findProposingCuratorReferenda(\n  ongoingReferenda: OngoingReferendum[],\n  bountyId: number,\n) {\n  const spenderReferenda = await getDecodedSpenderReferenda(ongoingReferenda)\n\n  return spenderReferenda\n    .map(({ call, referendum }) => {\n      const proposeCuratorCalls = findCalls(\n        {\n          pallet: \"Bounties\",\n          name: \"propose_curator\",\n        },\n        call,\n      )\n        .filter(\n          (v) =>\n            v?.bounty_id === bountyId &&\n            typeof v.curator === \"object\" &&\n            typeof v.fee === \"bigint\",\n        )\n        .map((v) => ({\n          curator: v.curator as MultiAddress,\n          fee: v.fee as bigint,\n        }))\n      if (!proposeCuratorCalls.length) return null\n      return { referendum, proposeCuratorCalls }\n    })\n    .filter((v) => v !== null)\n}\n\nexport const findCalls = (\n  call: { pallet: string; name: string },\n  obj: any,\n): any[] => {\n  if (typeof obj !== \"object\") return []\n  if (Array.isArray(obj)) {\n    const approves = []\n    for (const item of obj) approves.push(...findCalls(call, item))\n    return approves\n  }\n  if (obj?.type === call.pallet && obj?.value?.type === call.name) {\n    return [obj.value.value]\n  }\n  const approves = []\n  for (const key of Object.keys(obj))\n    approves.push(...findCalls(call, obj[key]))\n  return approves\n}\n","import { getPreimageResolver } from \"@/preimages\"\nimport { memo } from \"@/util/memo\"\nimport { BountiesSdkTypedApi, MultiAddress } from \"./descriptors\"\nimport { findCalls } from \"./find-referenda\"\n\nexport const scheduledFinder = (typedApi: BountiesSdkTypedApi) => {\n  const resolvePreimage = getPreimageResolver(\n    typedApi.query.Preimage.PreimageFor.getValues,\n  )\n\n  const getScheduledCalls = memo(async () => {\n    const agenda = await typedApi.query.Scheduler.Agenda.getEntries()\n    const token = await typedApi.compatibilityToken\n\n    const scheduled = agenda.flatMap(\n      ({ keyArgs: [height], value: values }) =>\n        values\n          ?.filter((v) => !!v)\n          .map((value) => ({\n            height,\n            call: value.call,\n          })) ?? [],\n    )\n\n    const resolvedCalls = await Promise.all(\n      scheduled.map(({ height, call }) =>\n        resolvePreimage(call)\n          .then(\n            (callData) => typedApi.txFromCallData(callData, token).decodedCall,\n          )\n          .then((decodedCall) => ({ height, call: decodedCall }))\n          .catch((ex) => {\n            console.error(ex)\n            return null\n          }),\n      ),\n    )\n    return resolvedCalls.filter((v) => !!v)\n  })\n  async function findScheduledApproved(bountyId: number) {\n    const calls = await getScheduledCalls()\n\n    return calls\n      .filter(({ call }) =>\n        findCalls({ pallet: \"Bounties\", name: \"approve_bounty\" }, call).some(\n          (v) => v?.bounty_id === bountyId,\n        ),\n      )\n      .map(({ height }) => height)\n  }\n\n  async function findScheduledCuratorProposed(bountyId: number) {\n    const calls = await getScheduledCalls()\n\n    return calls\n      .map(({ call, height }) => {\n        const proposeCuratorCalls = findCalls(\n          {\n            pallet: \"Bounties\",\n            name: \"propose_curator\",\n          },\n          call,\n        )\n          .filter(\n            (v) =>\n              v?.bounty_id === bountyId &&\n              typeof v.curator === \"object\" &&\n              typeof v.fee === \"bigint\",\n          )\n          .map((v) => ({\n            curator: v.curator as MultiAddress,\n            fee: v.fee as bigint,\n          }))\n        if (!proposeCuratorCalls.length) return null\n        return { height, proposeCuratorCalls }\n      })\n      .filter((v) => v !== null)\n  }\n\n  return { findScheduledApproved, findScheduledCuratorProposed }\n}\n","import { partitionEntries } from \"@/util/watchEntries\"\nimport { combineKeys, toKeySet } from \"@react-rxjs/utils\"\nimport { Binary, TxEvent } from \"polkadot-api\"\nimport { combineLatest, distinctUntilChanged, map } from \"rxjs\"\nimport { getBountyAccount } from \"./bounty-account\"\nimport { getBountyDescriptions$ } from \"./bounty-descriptions\"\nimport { BountiesSdkTypedApi, BountyWithoutDescription } from \"./descriptors\"\nimport {\n  findApprovingReferenda,\n  findProposingCuratorReferenda,\n} from \"./find-referenda\"\nimport { scheduledFinder } from \"./find-scheduled\"\nimport { BountiesSdk, Bounty, GenericBounty, ProposedBounty } from \"./sdk-types\"\n\nexport function createBountiesSdk(typedApi: BountiesSdkTypedApi): BountiesSdk {\n  const { findScheduledApproved, findScheduledCuratorProposed } =\n    scheduledFinder(typedApi)\n\n  const enhanceBounty = (\n    bounty: BountyWithoutDescription,\n    description: string | null,\n    id: number,\n  ): Bounty => {\n    const generic: GenericBounty = {\n      ...bounty,\n      type: bounty.status.type,\n      id,\n      description,\n      account: getBountyAccount(id),\n    }\n\n    switch (generic.status.type) {\n      case \"Proposed\":\n        return {\n          ...generic,\n          type: \"Proposed\",\n          approve() {\n            return typedApi.tx.Bounties.approve_bounty({ bounty_id: id })\n          },\n          close() {\n            return typedApi.tx.Bounties.close_bounty({ bounty_id: id })\n          },\n          filterApprovingReferenda(referenda) {\n            return findApprovingReferenda(referenda, id)\n          },\n          getScheduledApprovals() {\n            return findScheduledApproved(id)\n          },\n        }\n      case \"Approved\":\n        return { ...generic, type: \"Approved\" }\n      case \"Funded\":\n        return {\n          ...generic,\n          type: \"Funded\",\n          proposeCurator(curator, fee) {\n            return typedApi.tx.Bounties.propose_curator({\n              bounty_id: id,\n              curator: {\n                type: \"Id\",\n                value: curator,\n              },\n              fee,\n            })\n          },\n          close() {\n            return typedApi.tx.Bounties.close_bounty({ bounty_id: id })\n          },\n          filterProposingReferenda(referenda) {\n            return findProposingCuratorReferenda(referenda, id)\n          },\n          getScheduledProposals() {\n            return findScheduledCuratorProposed(id)\n          },\n        }\n      case \"CuratorProposed\":\n        return {\n          ...generic,\n          ...generic.status.value,\n          type: \"CuratorProposed\",\n          acceptCuratorRole() {\n            return typedApi.tx.Bounties.accept_curator({ bounty_id: id })\n          },\n          unassignCurator() {\n            return typedApi.tx.Bounties.unassign_curator({ bounty_id: id })\n          },\n          close() {\n            return typedApi.tx.Bounties.close_bounty({ bounty_id: id })\n          },\n        }\n      case \"Active\":\n        return {\n          ...generic,\n          type: \"Active\",\n          curator: generic.status.value.curator,\n          updateDue: generic.status.value.update_due,\n          extendExpiry(remark) {\n            return typedApi.tx.Bounties.extend_bounty_expiry({\n              bounty_id: id,\n              remark: Binary.fromText(remark ?? \"\"),\n            })\n          },\n          award(beneficiary) {\n            return typedApi.tx.Bounties.award_bounty({\n              bounty_id: id,\n              beneficiary: {\n                type: \"Id\",\n                value: beneficiary,\n              },\n            })\n          },\n          unassignCurator() {\n            return typedApi.tx.Bounties.unassign_curator({ bounty_id: id })\n          },\n          close() {\n            return typedApi.tx.Bounties.close_bounty({ bounty_id: id })\n          },\n        }\n      case \"PendingPayout\":\n        return {\n          ...generic,\n          type: \"PendingPayout\",\n          curator: generic.status.value.curator,\n          unlockAt: generic.status.value.unlock_at,\n          beneficiary: generic.status.value.beneficiary,\n          claim() {\n            return typedApi.tx.Bounties.claim_bounty({ bounty_id: id })\n          },\n          unassignCurator() {\n            return typedApi.tx.Bounties.unassign_curator({ bounty_id: id })\n          },\n        }\n    }\n    throw new Error(\"Unreachable\")\n  }\n\n  function watchBounties() {\n    const [getBountyById$, bountyKeyChanges$] = partitionEntries(\n      typedApi.query.Bounties.Bounties.watchEntries(),\n    )\n    const descriptions$ = getBountyDescriptions$(\n      typedApi.query.Bounties.BountyDescriptions.getEntries,\n      typedApi.query.Bounties.BountyDescriptions.getValues,\n      bountyKeyChanges$,\n    )\n\n    const bountyIds$ = bountyKeyChanges$.pipe(\n      toKeySet(),\n      map((set) => [...set]),\n    )\n\n    const getEnhancedBountyById$ = (id: number) =>\n      combineLatest([\n        getBountyById$(id),\n        descriptions$.pipe(\n          map((r): string | null => r[id] ?? null),\n          distinctUntilChanged(),\n        ),\n      ]).pipe(\n        map(([bounty, description]) => enhanceBounty(bounty, description, id)),\n      )\n\n    return {\n      bounties$: combineKeys(bountyKeyChanges$, getEnhancedBountyById$),\n      getBountyById$: getEnhancedBountyById$,\n      bountyIds$,\n    }\n  }\n\n  function getBounty(id: number, at?: string) {\n    return Promise.all([\n      typedApi.query.Bounties.Bounties.getValue(id, { at }),\n      typedApi.query.Bounties.BountyDescriptions.getValue(id, { at }),\n    ]).then(([bounty, description]) =>\n      bounty\n        ? enhanceBounty(bounty, description ? description.asText() : null, id)\n        : null,\n    )\n  }\n\n  async function getProposedBounty(\n    txEvent: TxEvent,\n  ): Promise<ProposedBounty | null> {\n    if (!(\"events\" in txEvent)) {\n      return null\n    }\n    const proposedBountyEvt = typedApi.event.Bounties.BountyProposed.filter(\n      txEvent.events,\n    )[0]\n    if (!proposedBountyEvt) {\n      return null\n    }\n    const id = proposedBountyEvt.index\n    const at = txEvent.type === \"finalized\" ? undefined : txEvent.block.hash\n\n    const bounty = await getBounty(id, at)\n    if (!bounty) return null\n\n    return bounty.type === \"Proposed\" ? bounty : null\n  }\n\n  function getBounties() {\n    return Promise.all([\n      typedApi.query.Bounties.Bounties.getEntries(),\n      typedApi.query.Bounties.BountyDescriptions.getEntries(),\n    ]).then(([entries, descriptions]) => {\n      const descriptionMap = Object.fromEntries(\n        descriptions.map(({ keyArgs, value }) => [keyArgs[0], value.asText()]),\n      )\n\n      return entries\n        .map(({ keyArgs: [id], value }) => ({ bounty: value, id }))\n        .sort((a, b) => a.id - b.id)\n        .map(({ bounty, id }) =>\n          enhanceBounty(bounty, descriptionMap[id] ?? null, id),\n        )\n    })\n  }\n\n  return {\n    watch: watchBounties(),\n    getBounties,\n    getBounty,\n    getProposedBounty,\n  }\n}\n","import { keyedMemo } from \"@/util/memo\"\nimport { partitionEntries } from \"@/util/watchEntries\"\nimport { combineKeys, toKeySet } from \"@react-rxjs/utils\"\nimport { combineLatest, distinctUntilChanged, map } from \"rxjs\"\nimport { getChildBountyAccount } from \"./bounty-account\"\nimport { getBountyDescriptions$ } from \"./bounty-descriptions\"\nimport {\n  ChildBountiesSdkTypedApi,\n  ChildBountyWithoutDescription,\n} from \"./child-descriptors\"\nimport {\n  ChildBountiesSdk,\n  ChildBounty,\n  GenericChildBounty,\n} from \"./child-sdk-types\"\n\nexport function createChildBountiesSdk(\n  typedApi: ChildBountiesSdkTypedApi,\n): ChildBountiesSdk {\n  const enhanceBounty = (\n    bounty: ChildBountyWithoutDescription,\n    description: string | null,\n    id: number,\n  ): ChildBounty => {\n    const generic: GenericChildBounty = {\n      ...bounty,\n      type: bounty.status.type,\n      id,\n      description,\n      account: getChildBountyAccount(bounty.parent_bounty, id),\n    }\n\n    const idObj = {\n      parent_bounty_id: bounty.parent_bounty,\n      child_bounty_id: id,\n    }\n    switch (generic.status.type) {\n      case \"Added\":\n        return {\n          ...generic,\n          type: \"Added\",\n          proposeCurator(curator, fee) {\n            return typedApi.tx.ChildBounties.propose_curator({\n              ...idObj,\n              curator: {\n                type: \"Id\",\n                value: curator,\n              },\n              fee,\n            })\n          },\n          close() {\n            return typedApi.tx.ChildBounties.close_child_bounty(idObj)\n          },\n        }\n      case \"CuratorProposed\":\n        return {\n          ...generic,\n          ...generic.status.value,\n          type: \"CuratorProposed\",\n          acceptCuratorRole() {\n            return typedApi.tx.ChildBounties.accept_curator(idObj)\n          },\n          unassignCurator() {\n            return typedApi.tx.ChildBounties.unassign_curator(idObj)\n          },\n          close() {\n            return typedApi.tx.ChildBounties.close_child_bounty(idObj)\n          },\n        }\n      case \"Active\":\n        return {\n          ...generic,\n          type: \"Active\",\n          curator: generic.status.value.curator,\n          award(beneficiary) {\n            return typedApi.tx.ChildBounties.award_child_bounty({\n              ...idObj,\n              beneficiary: {\n                type: \"Id\",\n                value: beneficiary,\n              },\n            })\n          },\n          unassignCurator() {\n            return typedApi.tx.ChildBounties.unassign_curator(idObj)\n          },\n          close() {\n            return typedApi.tx.ChildBounties.close_child_bounty(idObj)\n          },\n        }\n      case \"PendingPayout\":\n        return {\n          ...generic,\n          type: \"PendingPayout\",\n          curator: generic.status.value.curator,\n          unlockAt: generic.status.value.unlock_at,\n          beneficiary: generic.status.value.beneficiary,\n          claim() {\n            return typedApi.tx.ChildBounties.claim_child_bounty(idObj)\n          },\n          unassignCurator() {\n            return typedApi.tx.ChildBounties.unassign_curator(idObj)\n          },\n        }\n    }\n    throw new Error(\"Unreachable\")\n  }\n\n  function watchChildBounties(parentId: number) {\n    const [getBountyById$, bountyKeyChanges$] = partitionEntries(\n      typedApi.query.ChildBounties.ChildBounties.watchEntries(parentId),\n    )\n    const descriptions$ = getBountyDescriptions$(\n      typedApi.query.ChildBounties.ChildBountyDescriptions.getEntries,\n      typedApi.query.ChildBounties.ChildBountyDescriptions.getValues,\n      bountyKeyChanges$,\n    )\n\n    const bountyIds$ = bountyKeyChanges$.pipe(\n      toKeySet(),\n      map((set) => [...set]),\n    )\n\n    const getEnhancedBountyById$ = (id: number) =>\n      combineLatest([\n        getBountyById$(id),\n        descriptions$.pipe(\n          map((r): string | null => r[id] ?? null),\n          distinctUntilChanged(),\n        ),\n      ]).pipe(\n        map(([bounty, description]) => enhanceBounty(bounty, description, id)),\n      )\n\n    return {\n      bounties$: combineKeys(bountyIds$, getEnhancedBountyById$),\n      getBountyById$: getEnhancedBountyById$,\n      bountyIds$,\n    }\n  }\n\n  function getChildBounty(parentId: number, id: number) {\n    return Promise.all([\n      typedApi.query.ChildBounties.ChildBounties.getValue(parentId, id),\n      typedApi.query.ChildBounties.ChildBountyDescriptions.getValue(id).then(\n        (r) => (r ? r.asText() : null),\n      ),\n    ]).then(([bounty, description]) =>\n      bounty ? enhanceBounty(bounty, description, id) : null,\n    )\n  }\n\n  return {\n    watch: keyedMemo(watchChildBounties, new Map()),\n    getChildBounty,\n  }\n}\n","import { partitionEntries } from \"@/util/watchEntries\"\nimport { combineKeys, toKeySet } from \"@react-rxjs/utils\"\nimport { SS58String } from \"polkadot-api\"\nimport { combineLatest, firstValueFrom, map, Observable } from \"rxjs\"\nimport {\n  ConvictionVotingVoteAccountVote,\n  ConvictionVotingVoteVoting,\n  VotingConviction,\n  VotingSdkTypedApi,\n} from \"./descriptors\"\nimport {\n  ConvictionVotingSdk,\n  UnlockSchedule,\n  Vote,\n  VotingTrack,\n} from \"./sdk-types\"\n\nexport function createConvictionVotingSdk(\n  typedApi: VotingSdkTypedApi,\n): ConvictionVotingSdk {\n  const enhanceVotingFor = (\n    [account, track]: [SS58String, number],\n    votingFor: ConvictionVotingVoteVoting,\n    voteLockingPeriod: number,\n  ): VotingTrack => {\n    const lock = votingFor.value.prior[1]\n      ? {\n          block: votingFor.value.prior[0],\n          balance: votingFor.value.prior[1],\n        }\n      : null\n\n    const unlock = () =>\n      typedApi.tx.ConvictionVoting.unlock({\n        class: track,\n        target: {\n          type: \"Id\",\n          value: account,\n        },\n      })\n\n    const delegationPower = {\n      track,\n      ...votingFor.value.delegations,\n    }\n\n    const trackDetails = {\n      track,\n      delegationPower,\n      lock,\n      unlock,\n    }\n\n    if (votingFor.type === \"Casting\") {\n      // Rollup typescript build struggles otherwise\n      const rawVotes: [number, ConvictionVotingVoteAccountVote][] =\n        votingFor.value.votes\n      const votes = rawVotes.map(([poll, vote]): Vote => {\n        const remove = () =>\n          typedApi.tx.ConvictionVoting.remove_vote({\n            class: track,\n            index: poll,\n          })\n\n        if (vote.type === \"Standard\") {\n          const convictionValue = vote.value.vote & 0x7f\n          const conviction = {\n            type: convictions[convictionValue],\n            value: undefined,\n          }\n          const direction: \"aye\" | \"nay\" =\n            vote.value.vote & 0x80 ? \"aye\" : \"nay\"\n\n          return {\n            type: \"standard\",\n            poll,\n            direction,\n            balance: vote.value.balance,\n            conviction,\n            getLock(outcome) {\n              if (convictionValue && outcome?.side === direction) {\n                const end =\n                  outcome.ended +\n                  convictionLockMultiplier[conviction.type] * voteLockingPeriod\n\n                return {\n                  type:\n                    !trackDetails.lock || trackDetails.lock.block === end\n                      ? \"locked\"\n                      : trackDetails.lock.block < end\n                        ? // Only `extends` if the outer balance is greater than the vote balance\n                          // Because it actually only has an effect if it's extending the lock of a larger amount of tokens\n                          trackDetails.lock.balance > vote.value.balance\n                          ? \"extends\"\n                          : \"locked\"\n                        : // Same reasoning\n                          trackDetails.lock.balance < vote.value.balance\n                          ? \"extended\"\n                          : \"locked\",\n                  end,\n                }\n              }\n              return { type: \"free\" }\n            },\n            remove,\n          }\n        }\n        const votes = {\n          aye: vote.value.aye,\n          nay: vote.value.nay,\n          abstain: ((vote.value as any).abstain as bigint) ?? 0n,\n        }\n        const votesWithValue = Object.entries(votes).filter(([, v]) => v > 0n)\n        if (votesWithValue.length === 1) {\n          return {\n            type: \"standard\",\n            poll,\n            direction: votesWithValue[0][0] as any,\n            balance: votesWithValue[0][1],\n            conviction: {\n              type: \"None\",\n              value: undefined,\n            },\n            getLock() {\n              return { type: \"free\" }\n            },\n            remove,\n          }\n        }\n        return {\n          type: \"split\",\n          poll,\n          balance: Object.values(votes).reduce((a, b) => a + b),\n          ...votes,\n          getLock() {\n            return { type: \"free\" }\n          },\n          remove,\n        }\n      })\n\n      return {\n        type: \"casting\",\n        votes,\n        getUnlockSchedule(outcomes) {\n          const unlocks = votes.map((v, i) => {\n            const lock = v.getLock(outcomes[i])\n            return {\n              type: \"poll\" as \"poll\" | \"lock\",\n              id: v.poll,\n              block: lock.type === \"free\" ? 0 : lock.end,\n              balance: v.balance,\n            }\n          })\n          if (trackDetails.lock) {\n            unlocks.push({\n              type: \"lock\",\n              id: 0,\n              ...trackDetails.lock,\n            })\n          }\n          unlocks.sort((a, b) => Number(a.balance - b.balance))\n\n          const result: UnlockSchedule = []\n\n          let unlocked = 0\n          const getNextGroup = () => {\n            if (unlocked >= unlocks.length) return []\n\n            const start = unlocked\n            const balance = unlocks[unlocked++].balance\n            while (\n              unlocked < result.length &&\n              unlocks[unlocked].balance === balance\n            ) {\n              unlocked++\n            }\n            return unlocks.slice(start, unlocked)\n          }\n\n          let block = 0\n          while (unlocked < unlocks.length) {\n            const group = getNextGroup()\n            const nextBalance = unlocks[unlocked]?.balance ?? 0n\n            block = Math.max(block, ...group.map((l) => l.block))\n            const balance = group[0].balance - nextBalance\n\n            result.push({\n              block,\n              balance,\n              unlocks: group.map((v) =>\n                v.type === \"lock\"\n                  ? { type: \"lock\" }\n                  : {\n                      type: \"poll\",\n                      id: v.id,\n                    },\n              ),\n            })\n          }\n\n          return result\n        },\n        ...trackDetails,\n      }\n    }\n    return {\n      type: \"delegating\",\n      target: votingFor.value.target,\n      balance: votingFor.value.balance,\n      conviction: votingFor.value.conviction,\n      lockDuration:\n        convictionLockMultiplier[votingFor.value.conviction.type] *\n        voteLockingPeriod,\n      remove() {\n        return typedApi.tx.ConvictionVoting.undelegate({\n          class: track,\n        })\n      },\n      ...trackDetails,\n    }\n  }\n\n  const voteLockingPeriod$ =\n    typedApi.constants.ConvictionVoting.VoteLockingPeriod()\n  const votingTrack$ = (account: SS58String, track: number) =>\n    combineLatest([\n      typedApi.query.ConvictionVoting.VotingFor.watchValue(account, track),\n      voteLockingPeriod$,\n    ]).pipe(\n      map(([v, lockPeriod]) =>\n        enhanceVotingFor([account, track], v, lockPeriod),\n      ),\n    )\n  const watchTracks$ = (account: SS58String) => {\n    const [getTrackById$, trackKeyChanges$] = partitionEntries(\n      typedApi.query.ConvictionVoting.VotingFor.watchEntries(account).pipe(\n        map((v) => ({\n          deltas: v.deltas\n            ? {\n                deleted: v.deltas.deleted.map((d) => ({\n                  args: [d.args[1]],\n                  value: { track: d.args[1], value: d.value },\n                })),\n                upserted: v.deltas.upserted.map((d) => ({\n                  args: [d.args[1]],\n                  value: { track: d.args[1], value: d.value },\n                })),\n              }\n            : null,\n        })),\n      ),\n    )\n\n    const trackIds$ = trackKeyChanges$.pipe(\n      toKeySet(),\n      map((set) => [...set]),\n    )\n\n    const getEnhancedTrackById$ = (id: number) =>\n      combineLatest([getTrackById$(id), voteLockingPeriod$]).pipe(\n        map(([{ track, value }, lockPeriod]) =>\n          enhanceVotingFor([account, track], value, lockPeriod),\n        ),\n      )\n\n    return { getTrackById$: getEnhancedTrackById$, trackIds$, trackKeyChanges$ }\n  }\n\n  function votingTracks$(account: SS58String): Observable<Array<VotingTrack>> {\n    const { getTrackById$, trackKeyChanges$ } = watchTracks$(account)\n    return combineKeys(trackKeyChanges$, getTrackById$).pipe(\n      map((map) => Array.from(map.values())),\n    )\n  }\n\n  return {\n    votingTrack$,\n    votingTracks$,\n    getVotingTrack(account, track) {\n      return firstValueFrom(votingTrack$(account, track))\n    },\n    getVotingTracks(account) {\n      return firstValueFrom(votingTracks$(account))\n    },\n    voteSplit(poll, vote) {\n      const voteEntries = Object.entries(vote).filter(\n        ([, value]) => (value ?? 0n) > 0n,\n      )\n      const hasAbstain = (vote.abstain ?? 0n) > 0n\n\n      const singleVote =\n        voteEntries.length === 1\n          ? {\n              vote: voteEntries[0][0] === \"aye\" ? 0x80 : 0,\n              balance: voteEntries[0][1],\n            }\n          : null\n\n      return typedApi.tx.ConvictionVoting.vote({\n        poll_index: poll,\n        vote: hasAbstain\n          ? {\n              type: \"SplitAbstain\",\n              value: {\n                abstain: vote.abstain ?? 0n,\n                aye: vote.aye ?? 0n,\n                nay: vote.nay ?? 0n,\n              },\n            }\n          : singleVote\n            ? {\n                type: \"Standard\",\n                value: singleVote,\n              }\n            : {\n                type: \"Split\",\n                value: {\n                  aye: vote.aye ?? 0n,\n                  nay: vote.nay ?? 0n,\n                },\n              },\n      })\n    },\n    vote(vote, poll, value, conviction) {\n      const voteValue =\n        (vote === \"aye\" ? 0x80 : 0) |\n        Math.max(0, convictions.indexOf(conviction ? conviction.type : \"None\"))\n\n      return typedApi.tx.ConvictionVoting.vote({\n        poll_index: poll,\n        vote: {\n          type: \"Standard\",\n          value: {\n            vote: voteValue,\n            balance: value,\n          },\n        },\n      })\n    },\n    voteAbstain(poll, value) {\n      return typedApi.tx.ConvictionVoting.vote({\n        poll_index: poll,\n        vote: {\n          type: \"SplitAbstain\",\n          value: {\n            abstain: value,\n            aye: 0n,\n            nay: 0n,\n          },\n        },\n      })\n    },\n  }\n}\n\nconst convictionLockMultiplier: Record<VotingConviction[\"type\"], number> = {\n  None: 0,\n  Locked1x: 1,\n  Locked2x: 2,\n  Locked3x: 4,\n  Locked4x: 8,\n  Locked5x: 16,\n  Locked6x: 32,\n}\n\nconst convictions = Object.keys(\n  convictionLockMultiplier,\n) as VotingConviction[\"type\"][]\n"],"names":["partitionByKey","mergeMap","takeWhile","map","combineKeys","toKeySet","blake2b","Binary","AccountId","u32","merge","defer","skip","scan","startWith","shareReplay","approves","combineLatest","distinctUntilChanged","votes","lock","firstValueFrom"],"mappings":"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"}